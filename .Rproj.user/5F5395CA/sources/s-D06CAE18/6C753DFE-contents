

# Simulate gene names
simulateGenes <- function(ngenes,species) {
  return(sprintf("%s-gene%s",species,seq(1:ngenes)))
}

simulateCells <- function(ncells,species) {
  return(sprintf("%s-cell%s",species,seq(1:ncells)))
}


# Simulate count matrix
simulateCountMatrix <- function(ngenes,ncells) {
  counts = matrix(sample(0:1,ngenes*ncells, replace=TRUE),ngenes,ncells)
  return(counts)
}



matchSimulatedHomologs <- function(genes1,genes2,nhomologs) {
  inds1 = sample(seq(1:length(genes1)),replace=FALSE,nhomologs)
  inds2 = sample(seq(1:length(genes2)),replace=FALSE,nhomologs)
  genes1[inds1] = genes2[inds2]
  return(genes1)
}


nMouseGenes = 1000
nMouseCells = 500

mouse.data = simulateCountMatrix(nMouseGenes,nMouseCells)
mouse.genes = simulateGenes(nMouseGenes,"mouse")
mouse.cells = simulateCells(nMouseCells,"mouse")
colnames(mouse.data) = mouse.cells
rownames(mouse.data) = mouse.genes


nZebGenes = 2000
nZebCells = 750

zeb.data = simulateCountMatrix(nZebGenes,nZebCells)
zeb.genes = simulateGenes(nZebGenes,"zebrafish")
zeb.cells = simulateCells(nZebCells,"zebrafish")
colnames(zeb.data) = zeb.cells
rownames(zeb.data) = zeb.genes


mouse.genes = matchSimulatedHomologs(mouse.genes,zeb.genes,0.6*nMouseGenes)
rownames(mouse.data) = mouse.genes

mouse.seurat <- CreateSeuratObject(counts=mouse.data)
zeb.seurat <- CreateSeuratObject(counts = zeb.data)



md <- preprocessData(mouse.seurat)
zd <- preprocessData(zeb.seurat)



# Integrate data ----------------------------------------------------------

scdata.list = list(mouse=md,zebrafish=zd)

scdata.anchors <- FindIntegrationAnchors(object.list = scdata.list, dims = 1:30)
scdata.integrated <- IntegrateData(anchorset = scdata.anchors, dims = 1:30)




