
set.seed(42)
seed=42

library(scater)
library(batchelor)
library(biomart)

# Load data

mouse.path = "G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Pijuan_Sala_2019\\EmbryoTimecourse2018-master\\atlas_data\\atlas\\"
mouse.data = loadPijuanSala2019(mouse.path,sample=TRUE)

mouse3000 = readRDS("G:\\My Drive\\Postgrad\\PhD\\Projects\\scRNAseq-integration\\out\\output_data_samples\\mouse_subset.RDS")
mouse.markers = readRDS("G:\\My Drive\\Postgrad\\PhD\\Projects\\scRNAseq-integration\\data\\markers.rds")
mouse3000.counts = GetAssayData(mouse3000,"counts")

zeb.path = "G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Wagner_2018\\"
zeb.data = loadWagner2018(zeb.path,sample=TRUE)
zeb3000 = readRDS("G:\\My Drive\\Postgrad\\PhD\\Projects\\scRNAseq-integration\\out\\output_data_samples\\zeb_subset.RDS")
zeb3000$species = "zebrafish"

xeno3000 = readRDS("G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Briggs_2018\\xeno_subset.RDS")
xeno.data = readRDS("G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Briggs_2018\\xeno_data_subset.RDS")
xeno_20k <- readRDS("G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Briggs_2018\\sample_20k.RDS")
xeno <- as.Seurat(xeno_20k,data=NULL)


# Get subsets

mouse.mix = subset(mouse3000,cells=names(mouse3000$celltype[
  mouse3000$celltype %in% c("Forebrain/Midbrain/Hindbrain","Spinal cord","Blood progenitors 1", "Blood progenitors 2",
                            "Haematoendothelial progenitors",
                            "Visceral endoderm","Gut","Intermediate mesoderm","Nascent mesoderm",
                            "Def. endoderm",
                            "Anterior Primitive Streak")]))

mouse.brain = subset(mouse3000,cells=names(mouse3000$celltype[
  mouse3000$celltype %in% c("Forebrain/Midbrain/Hindbrain","Spinal cord")]))

mouse.brain = subset(mouse3000,cells=names(mouse3000$celltype[
  mouse3000$celltype %in% c("Forebrain/Midbrain/Hindbrain","Spinal cord","Caudal neurectoderm","Rostral neurectoderm")]))



mouse.blood = subset(mouse3000,cells=names(mouse3000$celltype[
  mouse3000$celltype %in% c("Endothelium","Blood progenitors 1", "Blood progenitors 2",
                            "Haematoendothelial progenitors","Erythroid1","Erythroid2", "Erythroid3")]))

mouse.blood = subset(mouse3000,cells=names(mouse3000$celltype[
  mouse3000$celltype %in% c("Blood progenitors 1", "Blood progenitors 2",
                            "Erythroid1","Erythroid2", "Erythroid3")]))


mouse.endo = subset(mouse3000,cells=names(mouse3000$celltype[
  mouse3000$celltype %in% c("Visceral endoderm","Gut", "Def. endoderm",
                            "Anterior Primitive Streak")]))



zeb.mix = subset(zeb3000,cells=names(zeb3000$celltype[
  zeb3000$celltype %in% c("Mesoderm","Hindbrain / Spinal Cord", "Forebrain / Optic","Midbrain","Endoderm")]))
zeb.mix = subset(zeb.mix,cells=names(zeb.mix$stage[zeb.mix$stage=="14hpf"]))


zeb.mix = subset(zeb3000,cells=names(zeb3000$celltype[
  zeb3000$celltype %in% c("Mesoderm","Endoderm")]))
#zeb.mix = subset(zeb.mix,cells=names(zeb.mix$stage[zeb.mix$stage=="14hpf"]))

zeb.brain = subset(zeb.mix,cells=names(zeb.mix$celltype[
  zeb.mix$celltype %in% c("Hindbrain / Spinal Cord", "Forebrain / Optic","Midbrain")]))

zeb.meso = subset(zeb3000,cells=names(zeb3000$celltype[
  zeb3000$celltype %in% c("Mesoderm")]))

zeb.endo = subset(zeb3000,cells=names(zeb3000$celltype[
  zeb3000$celltype %in% c("Endoderm")]))



xeno.blood.cells = names(xeno$celltype[xeno$celltype %in% c("S22-blood","S20-blood","S18-blood","S16-lateral plate mesoderm",
                                                                      "S22-lateral plate mesoderm","S22-ventral blood island",
                                                                      "S20-ventral blood island","S16-ventral blood island","S16-lateral plate mesoderm")])
xeno.blood = subset(xeno,cells=xeno.blood.cells)

xeno.brain.cells = names(xeno$celltype[xeno$celltype %in% c("S22-spinal cord","S22-anterior neural tube - nkx2-1/nkx2-4","S22-optic neuron","S22-anterior neural tube - fezf1",
                                                                      "S22-anterior neural tube - arx/nr2f1","S22-hindbrain",
                                                                      "S20-anterior neural tube - nkx2-1/nkx2-4","S20-Rohon-beard neuron","S20-posterior neural tube",
                                                                      "S18-Rohon-beard neuron","S18-anterior neural tube - nkx2-1/nkx2-4","S18-anterior neural tube - fezf1",
                                                                      "S16-anterior neural plate - nkx2-1/nkx2-4","S16-anterior neural plate - fezf1",
                                                                      "S14-anterior neural plate - nkx2-1/nkx2-4","S14-anterior neural plate - fezf1","S12-neural plate",
                                                                      "S11-neuroectoderm","S10-neuroectoderm")])
xeno.brain = subset(xeno.data$seurat,cells=xeno.brain.cells)

xeno.endo.cells = names(xeno$celltype[xeno$celltype %in% c("S20-endoderm / foregut","S18-endoderm / hindgut primordium","S18-endoderm / foregut primordium",
"16-endoderm / foregut primordium", "S16-endoderm", "S14-endoderm", "S13-endoderm",
"S12-endoderm", "S11-endoderm", "S11-endoderm")])
                                                                      
xeno.endo = subset(xeno.data$seurat,cells=xeno.endo.cells)

xeno.mix = subset(xeno,cells=c(xeno.brain.cells,xeno.blood.cells,xeno.endo.cells))

# Process data


mouse.mix = preprocessData(mouse.mix)
mouse.brain = preprocessData(mouse.brain)
mouse.blood = preprocessData(mouse.blood)
mouse.endo = preprocessData(mouse.endo)


zeb.mix = preprocessData(zeb.mix)
zeb.brain = preprocessData(zeb.brain)
zeb.meso = preprocessData(zeb.meso)
zeb.endo = preprocessData(zeb.endo)

xeno.brain = preprocessData(xeno.brain)
xeno.blood = preprocessData(xeno.blood)
xeno.endo = preprocessData(xeno.endo)
xeno.mix = preprocessData(xeno.mix)



mparams = c(35,0.3)
mouse.mix = processData(mouse.mix,mouse.data$genes,n_neighbours=mparams[1],
                        min_dist=mparams[2])
mouse.brain = processData(mouse.brain,mouse.data$genes,n_neighbours=mparams[1],
                          min_dist=mparams[2])
mouse.blood = processData(mouse.blood,mouse.data$genes,n_neighbours=mparams[1],
                          min_dist=mparams[2])
mouse.endo = processData(mouse.endo,mouse.data$genes,n_neighbours=mparams[1],
                          min_dist=mparams[2])


zparams = c(25,0.6)
zeb.mix <- processData(zeb.mix,zeb.data$genes,n_neighbours=zparams[1],
                       min_dist=zparams[2])
zeb.brain <- processData(zeb.brain,zeb.data$genes,n_neighbours=zparams[1],
                         min_dist=zparams[2])
zeb.meso <- processData(zeb.meso,zeb.data$genes,n_neighbours=zparams[1],
                         min_dist=zparams[2])
zeb.endo <- processData(zeb.endo,zeb.data$genes,n_neighbours=zparams[1],
                        min_dist=zparams[2])


xeno.brain <- processData(xeno.brain,xeno.data$genes)
xeno.blood <- processData(xeno.blood,xeno.data$genes)
xeno.endo <- processData(xeno.endo,xeno.data$genes)
xeno.mix <- processData(xeno.mix,rownames(xeno.mix))





plotDim(mouse.mix,"umap",feature="celltype",labels = TRUE)
plotDim(mouse.brain,"umap",feature="celltype",labels = TRUE)
plotDim(mouse.blood,"umap",feature="celltype",labels = TRUE)
plotDim(mouse.endo,"umap",feature="celltype",labels=TRUE)

plotDim(zeb.meso,"umap",feature="celltype",labels=TRUE)
plotDim(zeb.mix,"umap",feature="celltype",labels=TRUE)
plotDim(zeb.endo,"umap",feature="celltype",labels=TRUE)
plotDim(zeb.brain,"umap",feature="celltype",labels=TRUE)

DimPlot(xeno.mix,reduction="umap",group.by = "celltype",label = TRUE,repel=TRUE) + NoLegend()

#rindex = adj.rand.index(as.integer(mouse3000.sub$seurat_clusters),as.integer(mouseFilt.sub$seurat_clusters))
#contingency = plotContingencyTable(mouse3000.sub$seurat_clusters,mouseFilt.sub$seurat_clusters)



# Integrate 

homologs=readRDS("homologs.rds")
homologs.one2one = readRDS("homologs_one2one.rds")

mart = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
xeno.homologs = getBM(attributes = c("ensembl_gene_id", "external_gene_name",
                                     "xtropicalis_homolog_ensembl_gene",
                                     "xtropicalis_homolog_associated_gene_name",
                                     "xtropicalis_homolog_orthology_type"),
                      filters = "ensembl_gene_id", 
                      values = mouse.data$ensembl_ids,
                      mart = mart) 
xeno.homologs_121 = xeno.homologs[xeno.homologs$xtropicalis_homolog_orthology_type=="ortholog_one2one",]
xeno.homologs_121 = xeno.homologs_121[xeno.homologs_121$xtropicalis_homolog_associated_gene_name!="",]
xeno.one2one = list(ref=xeno.homologs_121$ensembl_gene_id,query=xeno.homologs_121$xtropicalis_homolog_associated_gene_name)


integrateSeurat <- function(d1,d2,ref.genes,edit.genes,new.names,
                            resolution=0.7,k.anchor=15) {
  d1.matched = matchDatasetSeurat(d1,ref.genes,edit.genes,new.names)
  
  d.list = list(query=d2,ref=d1.matched)
  #d.list = list(query=d1.matched,ref=d2)
  d.anchors <- FindIntegrationAnchors(object.list = d.list, dims = 1:50,k.anchor = k.anchor)
  d.intrgtd <- IntegrateData(anchorset = d.anchors, dims = 1:50)
  d.intrgtd <- processData(d.intrgtd,rownames(d.intrgtd@assays$integrated),
                           resolution = resolution)
  
  return(d.intrgtd)
}

brain.seurat = integrateSeurat(mouse.brain,zeb.brain,mouse.data$ensembl_ids,
                               homologs.one2one$ref,homologs.one2one$query,k.anchor=25)

blood.seurat = integrateSeurat(mouse.blood,zeb.meso,mouse.data$ensembl_ids,
                               homologs.one2one$ref,homologs.one2one$query,
                               resolution = 0.5)
endo.seurat = integrateSeurat(mouse.endo,zeb.endo,mouse.data$ensembl_ids,
                               homologs.one2one$ref,homologs.one2one$query,
                               resolution = 0.5)

mix.seurat = integrateSeurat(mouse.mix,zeb.mix,mouse.data$ensembl_ids,
                             homologs.one2one$ref,homologs.one2one$query)

brainmix.seurat = integrateSeurat(mouse.brain,zeb.mix,mouse.data$ensembl_ids,
                                  homologs.one2one$ref,homologs.one2one$query)

mixbrain.seurat = integrateSeurat(mouse.mix,zeb.brain,mouse.data$ensembl_ids,
                                  homologs.one2one$ref,homologs.one2one$query,k.anchor=30)


bloodmix.seurat = integrateSeurat(mouse.blood,zeb.mix,mouse.data$ensembl_ids,
                                  homologs.one2one$ref,homologs.one2one$query)

mouse_xeno_mix = integrateSeurat(mouse.mix,xeno.mix,mouse.data$ensembl_ids,
                             xeno.one2one$ref,xeno.one2one$query)

plotDim(blood.seurat,feature="celltype",labels=TRUE)
plotDim(endo.seurat,feature="celltype",labels=TRUE)
plotDim(brain.seurat,feature="celltype",labels=TRUE)
plotDim(blood.seurat,feature="seurat_clusters",labels=TRUE)
plotDim(bloodmix.seurat,feature="celltype",labels=TRUE)
plotDim(mix.seurat,feature="celltype",labels=TRUE)
plotDim(brainmix.seurat,feature="celltype",labels=TRUE)
plotDim(mixbrain.seurat,feature="celltype",labels=TRUE)
plotDim(mouse_xeno_mix,feature="celltype",labels=TRUE)


# Finding marker genes
# head(mouse.markers$all$Erythroid1,10)[,1:2]
# homologs[homologs$ensembl_gene_id=="ENSMUSG00000014226",]


# Erythroid 3 DE genes

FeaturePlot(mouse.blood,features=c("Hba-a2","Alas2","Blvrb","Hbb-y"),shape.by = "celltype")
FeaturePlot(zeb.meso,features=c("zgc:163057","alas2","blvrb","hbbe3"),shape.by = "celltype")
p = FeaturePlot(blood.seurat,features=c("alas2","blvrb")) 

test = FetchData(blood.seurat,c(c("UMAP_1","UMAP_2"),'celltype',c("alas2","blvrb")))
ggplot(test) + geom_point(aes(x=test$UMAP_1,y=test$UMAP_2,
                              color=test$alas2,shape=test$celltype)) + 
  scale_shape_manual(values=c(1,8,25,18,17,16,10,15)) + 
  scale_color_gradientn(colors=c('lightgrey', 'blue'),guide="colorbar") +
  xlab("UMAP_1") + ylab("UMAP_2") +
  labs(shape = "Cell type",
       color="Expression")  + 
  ggtitle("alas2")

ggplot(test) + geom_point(aes(x=test$UMAP_1,y=test$UMAP_2,
                              color=test$blvrb,shape=test$celltype)) + 
  scale_shape_manual(values=c(1,8,25,18,17,16,10,15)) + 
  scale_color_gradientn(colors=c('lightgrey', 'blue'),guide="colorbar") +
  xlab("UMAP_1") + ylab("UMAP_2") +
  labs(shape = "Cell type",
       color="Expression")  + 
  ggtitle("blvrb")




DimPlot(blood.seurat,reduction="umap",cells.highlight = zeb.ery3,group.by ="celltype",label=TRUE,repel=TRUE) + scale_color_manual(labels = c("Unselected", "Zebrafish Erythroid 3"), values = c("grey", "red")) 
  
ery3.cells = names(blood.seurat$seurat_clusters[blood.seurat$seurat_clusters%in%c(2,3)])
zeb.ery3 = ery3.cells[1:81]

FeaturePlot(zeb.meso,features=c("zgc:163057","alas2","blvrb","hbbe3"),cells=zeb.ery3)

# Erythroid 1 DE genes
zeb.ery1 = names(blood.seurat$seurat_clusters[blood.seurat$seurat_clusters== 2])
zeb.ery1 = zeb.ery1[1:6]
FeaturePlot(zeb.meso,features=c("hspe1","psmb10","snrpa1","cacybp"),cells=zeb.ery1)


# Blood progenitor genes
zeb.bp = names(blood.seurat$seurat_clusters[blood.seurat$seurat_clusters== 0])
zeb.bp=zeb.bp[1:156]
FeaturePlot(blood.seurat,features=c("spi1b","skap1","rbm38","lmo2"))

FeaturePlot(zeb.meso,features=c("spi1b","skap1","rbm38","lmo2"))
FeaturePlot(zeb.meso,features=c("spi1b","skap1","rbm38","lmo2"),cells=zeb.bp)


# Haemoendothelial progenitors
zeb.hp= names(blood.seurat$seurat_clusters[blood.seurat$seurat_clusters== 3])
zeb.hp = zeb.hp[1:27]

FeaturePlot(mouse.blood,features=c("Fev","Mmp9"),shape.by = "celltype")
FeaturePlot(zeb.meso,features=c("fev","mmp9","vgll4b","gadd45ga"))
FeaturePlot(blood.seurat,features=c("fev","mmp9"),shape.by="celltype")

FeaturePlot(zeb.meso,features=c("fev","mmp9","vgll4b"),cells=zeb.bp)


#Gut
FeaturePlot(mouse.endo,features=c("Hoxa1","Fzd2","B4galt6","Ripply3"),shape.by = "celltype")
FeaturePlot(zeb.endo,features=c("hoxa1a","fzd2","b4galt6","ripply3"),shape.by = "celltype")
FeaturePlot(endo.seurat,features=c("hoxa1a","fzd2","b4galt6","ripply3"),shape.by = "celltype")


# Def. Endoderm
FeaturePlot(mouse.endo,features=c("Alkbh6","Midn","Accs","Wbp1"),shape.by = "celltype")
FeaturePlot(zeb.endo,features=c("alkbh6","midn","accs","si:ch73-290k24.6"),shape.by = "celltype")
FeaturePlot(endo.seurat,features=c("alkbh6","midn","accs","si:ch73-290k24.6"),shape.by = "celltype")



#Anterior primitive streak
FeaturePlot(mouse.endo,features=c("Tfpi","Midn","Accs","Wbp1"),shape.by = "celltype")
FeaturePlot(zeb.endo,features=c("tfpia"),shape.by = "celltype")
FeaturePlot(endo.seurat,features=c("tfpia"),shape.by = "celltype")
FeaturePlot(mouse.endo,features=c("Mixl1"),shape.by = "celltype")

zeb.aps= names(endo.seurat$seurat_clusters[endo.seurat$seurat_clusters== 1])
zeb.aps = zeb.aps[1:118]

DimPlot(endo.seurat,reduction="umap",cells.highlight = zeb.aps,group.by ="celltype",label=TRUE,repel=TRUE) + scale_color_manual(labels = c("Unselected", "Zebrafish Anterior Primitive Streak"), values = c("grey", "red")) 

# Visceral endoderm
FeaturePlot(mouse.endo,features=c("Ttr","Dkk1","Amot"),shape.by = "celltype")
FeaturePlot(zeb.endo,features=c("ttr","amot"),shape.by = "celltype")
FeaturePlot(endo.seurat,features=c("ttr","amot"),shape.by = "celltype")



# Forebrain
FeaturePlot(mouse.brain,features=c("Six3","Emx2","Lhx2","Fezf1"),shape.by = "celltype")
FeaturePlot(zeb.brain,features=c("six3a","emx2","lhx2a","fezf1"),shape.by = "celltype")
FeaturePlot(brain.seurat,features=c("six3a","emx2","lhx2a","fezf1"),shape.by = "celltype")


# Midbrain
FeaturePlot(mouse.brain,features=c("Irx3"),shape.by = "celltype")
FeaturePlot(zeb.brain,features=c("irxa"),shape.by = "celltype")


#Hindbrain
FeaturePlot(mouse.brain,features=c("En1","Gbx2","Pax5"),shape.by = "celltype")
FeaturePlot(zeb.brain,features=c("eng1a","gbx2","pax5"),shape.by = "celltype")







mouse.brain.matched = matchDatasetSeurat(mouse.brain,mouse.data$ensembl_ids,
                                         homologs.one2one$ref,homologs.one2one$query)

mouse.blood.matched = matchDatasetSeurat(mouse.blood,mouse.data$ensembl_ids,
                                   homologs.one2one$ref,homologs.one2one$query)



data.list = list(zebrafish=zeb.brain,mouse=mouse.brain.matched)
data.list = list(zebrafish=zeb.mix,mouse=mouse.mix)


data.anchors <- FindIntegrationAnchors(object.list = data.list, dims = 1:50,k.anchor = 15)
data.intrgtd <- IntegrateData(anchorset = data.anchors, dims = 1:50)

data.intrgtd <- processData(data.intrgtd,rownames(data.intrgtd@assays$integrated))


plotDim(data.intrgtd,"umap",feature="celltype",labels = TRUE,legend=TRUE)
plotDim(data.intrgtd,"species",feature="celltype",labels = TRUE,legend=TRUE)



# -----------------------------------------------------------------

# MNN

mouse.brain.one2one = filterGenesSeurat(mouse.brain.matched,mouse.data$ensembl_ids,homologs.one2one$ref)
zeb.brain.one2one = filterGenesSeurat(zeb.brain,zeb.data$genes,homologs.one2one$query)

mouse3000.matched2 = filterGenesSeurat(mouse3000.matched,mouse.data$ensembl_ids,homologs.one2one$ref)
zeb3000.matched = filterGenesSeurat(zeb3000.sub,zeb.data$genes,homologs.one2one$query)


# mouse.matched2 = preprocessData(mouse3000.matched2)
# mouse.matched2 = processData(mouse.matched2,getGenes(mouse.data,homologs.one2one$ref))
mouse.brain.one2one = FindVariableFeatures(mouse.brain.one2one)
zeb.brain.one2one = FindVariableFeatures(zeb.brain.one2one)


mouse.brain.sce = as.SingleCellExperiment(mouse.brain.one2one)
zeb.brain.sce = as.SingleCellExperiment(zeb.brain.one2one)
zeb.brain.sce$species = "zebrafish"

mouse.sce= as.SingleCellExperiment(mouse3000.matched2)
zeb.sce = as.SingleCellExperiment(zeb3000.matched)
zeb.sce$species="zebrafish"

mnn.brain = fastMNN(mouse.brain.sce,zeb.brain.sce, k=15,d=50,
                          subset.row=intersect(VariableFeatures(mouse3000.matched2),
                                               VariableFeatures(zeb3000.matched)))





out = fastMNN(mouse.sce,zeb.sce, k=50,d=50,
              subset.row=intersect(VariableFeatures(mouse3000.matched2),
                                   VariableFeatures(zeb3000.matched)))

# out = mnnCorrect(mouse.sce,zeb.sce)
out.seurat = as.Seurat(out,counts="reconstructed",data=NULL)

out <- runUMAP(out, use_dimred="corrected")
out$celltype = c(as.character(mouse3000.matched2@meta.data$celltype),as.character(zeb3000.matched@meta.data$celltype))
out$species = c(as.character(mouse.sce$species),as.character(zeb.sce$species))
plotUMAP(out,colour_by="celltype",text_by="celltype",text_size=3)
plotUMAP(out,colour_by="species",text_by="celltype",text_size=3) + ggtitle("k=50,d=20,intersect")
plotUMAP(out,colour_by="seurat_clusters",text_by="celltype",text_size=3)


