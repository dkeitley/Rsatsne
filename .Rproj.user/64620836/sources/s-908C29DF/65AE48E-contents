source("G:\\My Drive\\Postgrad\\PhD\\Projects\\rabbit-gastrulation-atlas\\analysis\\src\\cross_species.R")

satsne.path = "G:\\My Drive\\Postgrad\\PhD\\Projects\\scRNAseq-integration\\lib\\SATSNE2019\\code\\"

file.sources = list.files(path=satsne.path,pattern="*.R")
for(i in 1:length(file.sources)) {
  source(paste0(satsne.path,file.sources[i]))
}

mouse_path <- "G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Pijuan_Sala_2019\\"
zeb_path <- "G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Wagner_2018\\"

mouse_sce <- readRDS(paste0(mouse_path,"samples\\sample_20k.RDS"))
zeb_sce <- readRDS("G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Wagner_2018\\samples\\sample_20k.RDS")
xeno_sce <- readRDS("G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Briggs_2018\\samples\\sample_20k.RDS")

zeb_genes = data.frame(read.csv(file = paste0("G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Wagner_2018\\",'genes.csv'), header=TRUE))

mouse_endo <- mouse_sce[,mouse_sce$celltype %in% c("Visceral endoderm","Gut", "Def. endoderm",
                                                   "Anterior Primitive Streak","Parietal endoderm")]
zeb_endo <- zeb_sce[,grep("*endoderm*",zeb_sce$ClusterName) ]
xeno_endo <- xeno_sce[,grep("*endoderm*",xeno_sce$celltype)]
xeno_endo <- xeno_endo[,-grep("*Spemann*",xeno_endo$celltype)]

#Get homologs
mouse_xeno_homologs <- getEnsemblHomologs("mmusculus",rowData(mouse_sce)$ensembl_ids,"xtropicalis")


ref_species<-"drerio"
query_species<-"xtropicalis"
mart = useMart("ensembl", dataset = paste0(ref_species,"_gene_ensembl"))
xeno_homologs = getBM(attributes = c("ensembl_gene_id", "external_gene_name","chromosome_name",
                                     "start_position","end_position","strand",
                                     paste0(query_species,"_homolog_ensembl_gene"),
                                     paste0(query_species,"_homolog_associated_gene_name"),
                                     paste0(query_species,"_homolog_chromosome"),
                                     paste0(query_species,"_homolog_chrom_start"),
                                     paste0(query_species,"_homolog_chrom_end"),
                                     paste0(query_species,"_homolog_orthology_type"),
                                     paste0(query_species,"_homolog_orthology_confidence"),
                                     paste0(query_species,"_homolog_perc_id"),
                                     paste0(query_species,"_homolog_perc_id_r1"),
                                     paste0(query_species,"_homolog_goc_score"),
                                     paste0(query_species,"_homolog_wga_coverage")),
                      filters = "external_gene_name",
                      values = zeb_genes$index,
                      mart = mart)


xeno_homologs <- read.table("G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Wagner_2018\\homologs\\xtropicalis.tsv")

mouse_xeno_one2one <- mouse_xeno_homologs[mouse_xeno_homologs$xtropicalis_homolog_orthology_type=="ortholog_one2one",]

one2one_homologs <- xeno_homologs[xeno_homologs$xtropicalis_homolog_orthology_type=="ortholog_one2one",]

one2ones_in_datasets <- one2one_homologs[one2one_homologs$external_gene_name %in% rownames(X) & one2one_homologs$xtropicalis_homolog_associated_gene_name %in% rownames(Y),]


X<-readRDS("G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Wagner_2018\\samples\\sample_1k.RDS")
Y<-readRDS("G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Briggs_2018\\samples\\sample_1k.RDS")

shared_feats <- data.frame(X=one2ones_in_datasets$external_gene_name,
                           Y=one2ones_in_datasets$xtropicalis_homolog_associated_gene_name)



library(scran)
library(scater)

# Uses deconvoluted size factors to normalise and log-transform counts
normaliseDeconv <- function(sce,min_clust_size=100,max_clust_size=6000) {
  lib_sizes = colSums(counts(sce))

  quick_clusts <- quickCluster(sce,min.size=min_clust_size,method="igraph")
  sce<-computeSumFactors(sce, clusters=quick_clusts,max.cluster.size=max_clust_size)
  sce <- logNormCounts(sce)

  return(sce)
}

reducePCA <- function(sce,npcs,approx_SVD=FALSE) {
  if(approx_SVD) {
    sce <- runPCA(sce,BSPARAM=RandomParam(), name="IRLBA")
  } else {
    sce <- runPCA(sce)
  }

  reducedDim(sce, "PCA") <- reducedDim(sce, "PCA")[,1:npcs]

  return(sce)
}


X<-normaliseDeconv(X)
Y<-normaliseDeconv(Y)

X<-reducePCA(X,50)
Y<-reducePCA(Y,50)

mouse_endo <- normaliseDeconv(mouse_endo)
xeno_endo <- normaliseDeconv(xeno_endo)
zeb_endo <- normaliseDeconv(zeb_endo)

#Identify HVGs
mouse_hvgs <- selectFeatures(mouse_endo)
zeb_hvgs <- selectFeatures(zeb_endo)
xeno_hvgs <- selectFeatures(xeno_endo)

#TSNE
mouse_endo <- runTSNE(mouse_endo)
plotReducedDim(mouse_endo,dimred = "TSNE",colour_by ="celltype" )

zeb_endo <- runTSNE(zeb_endo)
plotReducedDim(zeb_endo,dimred = "TSNE",colour_by = "ClusterName")

xeno_endo <- runTSNE(xeno_endo)
plotReducedDim(xeno_endo,dimred = "TSNE",colour_by = "celltype")
plotReducedDim(xeno_endo,dimred = "TSNE",colour_by = "stage")


# Identify shared features
mouse_one2one_hvgs <- mouse_xeno_one2one[mouse_xeno_one2one$external_gene_name %in% mouse_hvgs,]
mouse_xeno_hvgs <- mouse_one2one_hvgs[mouse_one2one_hvgs$xtropicalis_homolog_associated_gene_name %in% xeno_hvgs,]


zeb_one2one_hvgs <- one2one_homologs[one2one_homologs$external_gene_name %in% zeb_hvgs,]
xeno_one2one_hvgs <- xeno_hvgs[xeno_hvgs %in% one2one_homologs$xtropicalis_homolog_associated_gene_name]
one2one_hvgs <- zeb_one2one_hvgs[zeb_one2one_hvgs$xtropicalis_homolog_associated_gene_name %in% xeno_hvgs,]


#SATSNE
X1 = counts(mouse_endo)
X2 = counts(xeno_endo)
X1shared <- cosine.norm(counts(mouse_endo)[mouse_xeno_hvgs$external_gene_name,])
X2shared <- cosine.norm(counts(xeno_endo)[mouse_xeno_hvgs$xtropicalis_homolog_associated_gene_name,])


tsneX <- satsne_annealing (t(X1),t(X2),t(X1shared),t(X2shared),
                           nk1 = 2,nk2=2,do.plot = TRUE,
                           labels1 = mouse_endo$celltype,
                           labels2 = xeno_endo$celltype,
                           perplex_in1 = 250,
                           perplex_fin = 50,perplex_steps = 0.8)


df1<-data.frame(x=tsneX$Y1[,1],y=tsneX$Y1[,2],group=as.factor(mouse_endo$celltype))
p1<-ggplot(df1)+geom_point(aes(x,y,color=group,fill=group)) +coord_fixed(ratio = 1)  + theme(legend.position="right")

df2<-data.frame(x=tsneX$Y2[,1],y=tsneX$Y2[,2],group=as.factor(xeno_endo$celltype))
p2<-ggplot(df2)+geom_point(aes(x,y,color=group,fill=group))+coord_fixed(ratio = 1) + theme(legend.position="right")

grid.arrange(p1,p2 , nrow = 2 , ncol = 1)
