setwd("G:/My Drive/Postgrad/PhD/Projects/scRNAseq-integration/lib")
library(pheatmap)
mouse.path = "G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Pijuan_Sala_2019\\other\\atlas_data\\atlas\\"
mouse.data = loadPijuanSala2019(mouse.path,sample=TRUE)
source('G:/My Drive/Postgrad/PhD/Projects/scRNAseq-integration/utils.R')
mouse3k = readRDS("G:\\My Drive\\Postgrad\\PhD\\Projects\\scRNAseq-integration\\out\\output_data_samples\\mouse_subset.RDS")
mix.celltypes = c("Forebrain/Midbrain/Hindbrain","Spinal cord","Blood progenitors 1", "Blood progenitors 2",
"Haematoendothelial progenitors",
"Visceral endoderm","Gut","Intermediate mesoderm","Nascent mesoderm",
"ExE endoderm","Parietal endoderm")
mouse.mix = subset(mouse3k,cells=names(mouse3k$celltype[
mouse3k$celltype %in% mix.celltypes]))
homologs.one2one = readRDS("homologs_one2one.rds")
setwd("G:/My Drive/Postgrad/PhD/Projects/scRNAseq-integration/tests")
setwd("G:/My Drive/Postgrad/PhD/Projects/scRNAseq-integration")
homologs.one2one = readRDS("homologs_one2one.rds")
#dros.homologs = getHomologData(mouse.data$ensembl_ids,"dmelanogaster",mart)
human.homologs = getHomologData(mouse.data$ensembl_ids,"hsapiens",mart)
mparams = c(35,0.3)
mouse.raw = preprocessData(mouse.mix)
mouse.raw = processData(mouse.raw,mouse.data$genes,n_neighbours=mparams[1],
min_dist=mparams[2],dims = 1:50,resolution = 1.2)
mouse.data = loadPijuanSala2019(mouse.path,sample=TRUE)
source('G:/My Drive/Postgrad/PhD/Projects/scRNAseq-integration/load.R')
mouse.data = loadPijuanSala2019(mouse.path,sample=TRUE)
library(plotly)
setwd("G:/My Drive/Postgrad/PhD/Projects/rabbit-gastrulation-atlas/private")
fig <- readRDS("ploy_fig.rds")
orca(fig,"G:\\My Drive\\Postgrad\\PhD\\Projects\\rabbit-gastrulation-atlas\\private\\mouse_rabbit_batch_effect.pdf")
setwd("G:/My Drive/Postgrad/PhD/Projects/rabbit-gastrulation-atlas/private")
fig <- readRDS("ploy_fig.rds")
library(plotly)
orca(fig,"G:\\My Drive\\Postgrad\\PhD\\Projects\\rabbit-gastrulation-atlas\\private\\mouse_rabbit_batch_effect.pdf")
orca(fig,"G:\\My Drive\\Postgrad\\PhD\\Projects\\rabbit-gastrulation-atlas\\private\\mouse_rabbit_batch_effect.pdf")
orca(fig,"mouse_rabbit_batch_effect.pdf")
fig <- readRDS("plotly_fig.rds")
fig <- readRDS("plotly_fig.rds")
fig <- readRDS("plotly_fig.rds")
fig <- readRDS("plotly_fig.rds")
fig <- readRDS("plotly_fig.rds")
fig <- readRDS("plotly_fig.rds")
fig <- readRDS("ploy_fig.rds")
> fig <- readRDS("ploy_fig.rds")
> fig <- readRDS("ploy_fig.rds")
fig <- readRDS("ploy_fig.rds")
setwd("G:/My Drive/Postgrad/PhD/Projects/rabbit-gastrulation-atlas/private")
fig <- readRDS("plotly_fig.rds")
library(plotly)
orca(fig,"mouse_rabbit_batch_effect.pdf")
orca(fig,"mouse_rabbit_batch_effect.pdf")
setwd("G:/My Drive/Postgrad/PhD/Projects/scRNAseq-integration/figs")
setwd("G:/My Drive/Postgrad/PhD/Projects/rabbit-gastrulation-atlas/private")
fig <- readRDS("blood_pca_legend.rds")
orca(fig,"mouse_rabbit_blood_pca.pdf")
library(plotly)
orca(fig,"mouse_rabbit_blood_pca.pdf")
fig <- readRDS("blood_pca.rds")
orca(fig,"mouse_rabbit_blood_pca_no_legend.pdf")
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
BiocManager::install("biocLite")
BiocManager::install("biocLite")
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rdhf5)
BiocManager::install("rhdf5")
devtools::install_github("AllenInstitute/scrattch.io")
setwd("G:/My Drive/Postgrad/PhD/Projects/data/Tasic_2016")
library(scrattch.io)
options(stringsAsFactors = FALSE)
tome        <- "transcrip.tome"
exons       <- read_tome_dgCMatrix(tome,"data/t_exon")    # (or data/exon)
library(rhdf5)
?read_tome_dgCMatrix
tome <- system.file("transcrip.tome",
package = "scrattch.io")
tome
?system.file
gene_name   <- read_tome_gene_names(tome)
tome        <- "transcrip.tome"
gene_name   <- read_tome_gene_names(tome)
head(gene_name)
sample_name <- read_tome_sample_names(tome)
exons       <- read_tome_dgCMatrix(tome,"data/exon")    # (or data/exon)
tome        <- "G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Tasic_2016\\transcrip.tome"
exons       <- read_tome_dgCMatrix(tome,"data/t_exon")    # (or data/exon)
tome <- system.file("G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Tasic_2016","transcrip.tome",
package="scrattch.io")
tome
class(tome)
?system.file
tome <- system.file("G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Tasic_2016\\","transcrip.tome",
package="scrattch.io")
tome
system.file("G:\\My Drive\\Postgrad\\PhD\\Projects\\data\\Tasic_2016","transcrip.tome",
package="scrattch.io")
library(scater)
library(scRNAseq)
BiocManager::install("scRNAseq")
BiocManager::install("scRNAseq")
library(scRNAseq)
BiocManager::install("scRNAseq")
BiocManager::valid()
BiocManager::install(c(
"ape", "backports", "batchelor", "Biobase", "BiocNeighbors", "BiocParallel", "BiocSingular", "bit64",
"DelayedArray", "dplyr", "edgeR", "ellipsis", "GenomicRanges", "ggplot2", "glue", "htmltools",
"IRanges", "jsonlite", "limma", "openssl", "processx", "ps", "purrr", "Rcpp", "RCurl", "reticulate",
"rlang", "S4Vectors", "scater", "scran", "Seurat", "sp", "tibble", "tidyr", "vctrs", "XML",
"XVector", "zlibbioc"
), update = TRUE, ask = FALSE)
BiocManager::install(c(
"ape", "backports", "batchelor", "Biobase", "BiocNeighbors", "BiocParallel", "BiocSingular", "bit64",
"DelayedArray", "dplyr", "edgeR", "ellipsis", "GenomicRanges", "ggplot2", "glue", "htmltools",
"IRanges", "jsonlite", "limma", "openssl", "processx", "ps", "purrr", "Rcpp", "RCurl", "reticulate",
"rlang", "S4Vectors", "scater", "scran", "Seurat", "sp", "tibble", "tidyr", "vctrs", "XML",
"XVector", "zlibbioc"
), update = TRUE, ask = FALSE)
BiocManager::install(c(
"ape", "backports", "batchelor", "Biobase", "BiocNeighbors", "BiocParallel", "BiocSingular", "bit64",
"DelayedArray", "dplyr", "edgeR", "ellipsis", "GenomicRanges", "ggplot2", "glue", "htmltools",
"IRanges", "jsonlite", "limma", "openssl", "processx", "ps", "purrr", "Rcpp", "RCurl", "reticulate",
"rlang", "S4Vectors", "scater", "scran", "Seurat", "sp", "tibble", "tidyr", "vctrs", "XML",
"XVector", "zlibbioc"
), update = TRUE, ask = FALSE)
BiocManager::valid()
BiocManager::install(c(
"bit64", "dplyr", "ellipsis", "glue", "htmltools", "jsonlite", "purrr", "RCurl", "reticulate",
"S4Vectors", "scater", "scran", "Seurat", "sp", "tibble", "tidyr", "vctrs", "XML", "XVector",
"zlibbioc"
), update = TRUE, ask = FALSE)
BiocManager::install(c(
"bit64", "dplyr", "ellipsis", "glue", "htmltools", "jsonlite", "purrr", "RCurl", "reticulate",
"S4Vectors", "scater", "scran", "Seurat", "sp", "tibble", "tidyr", "vctrs", "XML", "XVector",
"zlibbioc"
), update = TRUE, ask = FALSE)
BiocManager::install("scRNAseq")
BiocManager::install("scRNAseq")
BiocManager::install(c(
"bit64", "dplyr", "ellipsis", "glue", "htmltools", "jsonlite", "purrr", "RCurl", "reticulate",
"S4Vectors", "scater", "scran", "Seurat", "sp", "tibble", "tidyr", "vctrs", "XML", "XVector",
"zlibbioc"
), update = TRUE, ask = FALSE)
BiocManager::install("scRNAseq")
BiocManager::install("scRNAseq",INSTALL_opts="--no-multiarch")
